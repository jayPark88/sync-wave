<configuration>
    <!-- Environment-specific properties -->
    <springProfile name="local">
        <property name="LOG_PATH" value="/Users/jihoonpark/logs/sync-wave"/>
    </springProfile>
    <springProfile name="dev">
        <property name="LOG_PATH" value="/path/to/dev/logs"/>
    </springProfile>
    <springProfile name="prod">
        <property name="LOG_PATH" value="/path/to/prod/logs"/>
    </springProfile>

    <!-- Console Appender: 콘솔에 출력하는 로그 설정 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!--            %d{yyyy-MM-dd HH:mm:ss} : 로그 발생 시간을 yyyy-MM-dd HH:mm:ss 형식으로 표시합니다.-->
            <!--            [%thread] : 로그가 발생한 스레드 이름을 대괄호 안에 표시합니다.-->
            <!--            %-5level : 로그 레벨(INFO, DEBUG 등)을 고정된 5자리 공간을 할당해 왼쪽 정렬합니다.-->
            <!--            %logger{36} : 로그를 출력하는 로거의 이름을 최대 36자까지 표시합니다.-->
            <!--            %msg : 실제 로그 메시지를 표시합니다.-->
            <!--            %n : 줄바꿈을 추가합니다.-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- Appender configuration -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/app.log</file>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 매일 로그 파일 분리 -->
            <fileNamePattern>${LOG_PATH}/app.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 2주간 보관 -->
            <maxHistory>14</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- Root Logger 설정: 로그 레벨과 Appender 지정 -->
    <root level="info">
        <appender-ref ref="CONSOLE"/> <!-- 콘솔에 로그 출력 -->
        <appender-ref ref="FILE"/> <!-- 파일에 로그 기록 -->
    </root>
</configuration>